pipeline
{

    agent any

    tools{
    maven "maven-3.9.0"
    }

    parameters {
    choice choices: ['master',  'development',  'qa'], description: 'Select the branch name', name: 'BranchName'
    }

    
    options {
    timestamps()
    buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '10', daysToKeepStr: '', numToKeepStr: '10')
    }
    
    stages{
        //Get the code from GitHub
        stage('Checkout Code'){
            steps{
                slackNotifications("STARTED")
                git branch: "${params.BranchName}", url: 'https://github.com/devops-new1/maven-web-application.git'
            }
        }

        //Do the build
        stage('Build'){
            steps{
                sh "mvn clean package"
            }
        }

        //Execute SonarQube Report
        stage('SonarQube Report'){
            steps{
                sh "mvn sonar:sonar"
            }
        }

        //Upload artificats in the Nexus
        stage('Upload Artifcats into Nexus'){
            steps{
                sh "mvn deploy"
            }
        }

        //Deploy to Tomcat
        stage('Deploy to Tomcat Server'){
            steps{
                sshagent(['cf00e5bf-20c3-4ebe-a34a-18286d6c626a']) {
                    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@43.205.233.50:/opt/apache-tomcat-9.0.73/webapps"
                }
            }
        }

    }//stages closing

    post {
    success {
        slackNotifications(currentBuild.result)
    }
    failure {
        slackNotifications(currentBuild.result)
    }
    }

   
}//pipeline closing


def slackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
